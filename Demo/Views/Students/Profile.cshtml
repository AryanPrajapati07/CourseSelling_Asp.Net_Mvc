@model Demo.Models.Student

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Profile - EduMaster</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

            .header h1 {
                color: #2c3e50;
                font-size: 2.5rem;
                font-weight: 700;
                margin-bottom: 10px;
            }

            .header .subtitle {
                color: #7f8c8d;
                font-size: 1.1rem;
                font-weight: 400;
            }

        .debug-message {
            background: linear-gradient(135deg, #ff6b6b, #ee5a24);
            color: white;
            padding: 15px 20px;
            border-radius: 12px;
            margin-bottom: 20px;
            box-shadow: 0 10px 20px rgba(255, 107, 107, 0.3);
            display: flex;
            align-items: center;
            gap: 10px;
        }

            .debug-message::before {
                content: "⚠️";
                font-size: 1.2rem;
            }

        .profile-grid {
            display: grid;
            grid-template-columns: 1fr 2fr;
            gap: 30px;
            margin-bottom: 30px;
        }

        .profile-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .avatar-section {
            text-align: center;
        }

        .avatar {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            margin: 0 auto 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 3rem;
            font-weight: 700;
            box-shadow: 0 15px 30px rgba(102, 126, 234, 0.3);
        }

        .student-name {
            font-size: 1.8rem;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 10px;
        }

        .student-id {
            color: #7f8c8d;
            font-size: 1rem;
            margin-bottom: 20px;
        }

        .status-badge {
            display: inline-block;
            padding: 8px 16px;
            background: linear-gradient(135deg, #00b894, #00cec9);
            color: white;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 600;
            box-shadow: 0 5px 15px rgba(0, 184, 148, 0.3);
        }

        .info-section h3 {
            color: #2c3e50;
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 25px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

            .info-section h3::before {
                content: "📋";
                font-size: 1.2rem;
            }

        .info-grid {
            display: grid;
            gap: 20px;
        }

        .info-item {
            display: flex;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

            .info-item:last-child {
                border-bottom: none;
            }

        .info-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 15px;
            font-size: 1.2rem;
        }

            .info-icon.name {
                background: linear-gradient(135deg, #ff9ff3, #f368e0);
            }

            .info-icon.age {
                background: linear-gradient(135deg, #54a0ff, #2e86de);
            }

            .info-icon.email {
                background: linear-gradient(135deg, #5f27cd, #341f97);
            }

            .info-icon.location {
                background: linear-gradient(135deg, #00d2d3, #01a3a4);
            }

        .info-content {
            flex: 1;
        }

        .info-label {
            font-size: 0.9rem;
            color: #7f8c8d;
            font-weight: 500;
            margin-bottom: 5px;
        }

        .info-value {
            font-size: 1.1rem;
            color: #2c3e50;
            font-weight: 600;
        }

        .actions-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

            .actions-section h3 {
                color: #2c3e50;
                font-size: 1.5rem;
                font-weight: 700;
                margin-bottom: 25px;
                display: flex;
                align-items: center;
                gap: 10px;
            }

                .actions-section h3::before {
                    content: "⚡";
                    font-size: 1.2rem;
                }

        .action-buttons {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
        }

        .action-btn {
            padding: 15px 20px;
            border: none;
            border-radius: 12px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            text-align: center;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

            .action-btn.primary {
                background: linear-gradient(135deg, #667eea, #764ba2);
                color: white;
                box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
            }

            .action-btn.secondary {
                background: linear-gradient(135deg, #f093fb, #f5576c);
                color: white;
                box-shadow: 0 10px 20px rgba(240, 147, 251, 0.3);
            }

            .action-btn.success {
                background: linear-gradient(135deg, #4ecdc4, #44a08d);
                color: white;
                box-shadow: 0 10px 20px rgba(78, 205, 196, 0.3);
            }

            .action-btn:hover {
                transform: translateY(-3px);
                box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
            }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 25px;
            text-align: center;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: transform 0.3s ease;
        }

            .stat-card:hover {
                transform: translateY(-5px);
            }

        .stat-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            margin: 0 auto 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }

        .stat-card:nth-child(1) .stat-icon {
            background: linear-gradient(135deg, #ff9a9e, #fecfef);
        }

        .stat-card:nth-child(2) .stat-icon {
            background: linear-gradient(135deg, #a8edea, #fed6e3);
        }

        .stat-card:nth-child(3) .stat-icon {
            background: linear-gradient(135deg, #fbc2eb, #a6c1ee);
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 5px;
        }

        .stat-label {
            color: #7f8c8d;
            font-size: 1rem;
            font-weight: 500;
        }

        (max-width: 768px) {
            .profile-grid

        {
            grid-template-columns: 1fr;
            gap: 20px;
        }

        .header h1 {
            font-size: 2rem;
        }

        .avatar {
            width: 120px;
            height: 120px;
            font-size: 2.5rem;
        }

        .student-name {
            font-size: 1.5rem;
        }

        .action-buttons {
            grid-template-columns: 1fr;
        }

        .stats-grid {
            grid-template-columns: 1fr;
        }

        
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <h1>EduMaster</h1>
            <p class="subtitle">Student Profile Management System</p>
        </div>

        <!-- Debug Message (if exists) -->
        <div class="debug-message" style="display: none;" id="debugMessage">
            Payment Debug Information
        </div>

        <!-- Profile Grid -->
        <div class="profile-grid">
            <!-- Avatar Section -->
            <div class="profile-card avatar-section">
                <div class="avatar" id="studentAvatar">EM</div>
                <div class="student-name" id="studentName">@Model.Name</div>
                <div class="student-id">Student ID: @($"STU0{Model.Id}")</div>
                <div class="status-badge">Active Student</div>
            </div>

            <!-- Information Section -->
            <div class="profile-card info-section">
                <h3>Personal Information</h3>
                <div class="info-grid">
                    <div class="info-item">
                        <div class="info-icon name">👤</div>
                        <div class="info-content">
                            <div class="info-label">Full Name</div>
                            <div class="info-value" id="displayName">@Model.Name</div>
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-icon age">🎂</div>
                        <div class="info-content">
                            <div class="info-label">Age</div>
                            <div class="info-value" id="displayAge">@Model.Age</div>
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-icon email">📧</div>
                        <div class="info-content">
                            <div class="info-label">Email Address</div>
                            <div class="info-value" id="displayEmail">@Model.Email</div>
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-icon location">🌍</div>
                        <div class="info-content">
                            <div class="info-label">Location</div>
                            <div class="info-value" id="displayLocation">@Model.Country , @Model.State</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Actions Section -->
        <div class="actions-section">
            <h3>Quick Actions</h3>
            <div class="action-buttons">
                <button class="action-btn primary">
                    📝 Edit Profile
                </button>
                <button class="action-btn secondary">
                    📊 View Grades
                </button>
                <button class="action-btn success">
                    💳 Payment History
                </button>
                <button class="action-btn primary">
                    📚 Course Enrollment
                </button>
                <button class="action-btn secondary">
                    📧 Send Message
                </button>
                <button class="action-btn success">
                    📋 Generate Report
                </button>
            </div>
        </div>

        <!-- Statistics Section -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-icon">📚</div>
                <div class="stat-value">12</div>
                <div class="stat-label">Enrolled Courses</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">⭐</div>
                <div class="stat-value">4.8</div>
                <div class="stat-label">Average GPA</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">🏆</div>
                <div class="stat-value">85%</div>
                <div class="stat-label">Completion Rate</div>
            </div>
        </div>
    </div>

    <script>
        
        // Function to get initials for avatar
        function getInitials(name) {
            return name.split(' ').map(n => n[0]).join('').toUpperCase();
        }

        // Function to populate student data
        function populateStudentData(data) {
            // Update avatar initials
            document.getElementById('studentAvatar').textContent = getInitials(data.name);

            // Update name displays
            document.getElementById('studentName').textContent = data.name;
            document.getElementById('displayName').textContent = data.name;

            // Update other fields
            document.getElementById('displayAge').textContent = data.age + ' years';
            document.getElementById('displayEmail').textContent = data.email;
            document.getElementById('displayLocation').textContent = data.state + ', ' + data.country;
        }

        // Function to show debug message if exists
        function showDebugMessage(message) {
            if (message) {
                const debugDiv = document.getElementById('debugMessage');
                debugDiv.textContent = message;
                debugDiv.style.display = 'flex';
            }
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            populateStudentData(studentData);

            // Add click handlers for action buttons
            document.querySelectorAll('.action-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    // Add your action handlers here
                    console.log('Action clicked:', this.textContent.trim());
                });
            });
        });

        // Animation for cards on scroll
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver(function(entries) {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, observerOptions);

        // Observe all cards
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.profile-card, .stat-card, .actions-section').forEach(card => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                card.style.transition = 'all 0.6s ease';
                observer.observe(card);
            });
        });
    </script>
</body>
</html>